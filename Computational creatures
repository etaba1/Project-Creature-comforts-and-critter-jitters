var Creatures = function() {
    //where creatures start off
  this.position = new PVector(random(width), random(height));
  this.velocity = new PVector(0, 0);
  this.acceleration = new PVector(0, 0);
};

Creatures.prototype.update = function() {
    //follow the mouse
    var mouse = new PVector(mouseX, mouseY);

var dir = PVector.sub(mouse, this.position);
    dir.normalize(); // smoother animation
    //makes creatures swarm around mouse and more lively
    dir.mult(0.2);
    this.acceleration = dir;
    //moves at smooth pace (not too slow)
    this.velocity.add(this.acceleration);//makes creatures less all over the place and more gathered towards mouse
    this.velocity.limit(5);
    this.position.add(this.velocity);
};

var Redbug = function(position, velocity, acceleration) {
    Creatures.call(this,position, velocity, acceleration);
};

Redbug.prototype=Object.create(Creatures.prototype);

Redbug.prototype.display = function() {
    //draws/displays the creatures themselves
  image(getImage("cute/EnemyBug"),this.position.x,this.position.y,75,80);
};

var sRedbug = function(position, velocity, acceleration) {
    Creatures.call(this,position, velocity, acceleration);
};

sRedbug.prototype=Object.create(Creatures.prototype);

sRedbug.prototype.display = function() {
    //draws/displays the creatures themselves
  image(getImage("cute/EnemyBug"),this.position.x,this.position.y,20,30);
};

sRedbug.prototype.update = function() {
    //follow the mouse
    var mouse = new PVector(random(width), random(height));

var dir = PVector.sub(mouse, this.position);
    dir.normalize(); // smoother animation
    //makes creatures swarm around mouse and more lively
    dir.mult(0.3);
    this.acceleration = dir;
    //moves at smooth pace (not too slow)
    this.velocity.add(this.acceleration);//makes creatures less all over the place and more gathered towards mouse
    this.velocity.limit(5);
    this.position.add(this.velocity);
    
};

Redbug.prototype.checkEdges = function() {
//making sure the creatures don't go off canvas
 if (this.position.x > width) {
    this.position.x = 0; 
  } 
  else if (this.position.x < 0) {
    this.position.x = width;
  }

  if (this.position.y > height) {
    this.position.y = 0;
  } 
  else if (this.position.y < 0) {
    this.position.y = height;
  }
};

sRedbug.prototype.checkEdges = function() {
//making sure the creatures don't go off canvas
 if (this.position.x > width) {
    this.position.x = 0; 
  } 
  else if (this.position.x < 0) {
    this.position.x = width;
  }

  if (this.position.y > height) {
    this.position.y = 0;
  } 
  else if (this.position.y < 0) {
    this.position.y = height;
  }
};

for (var i = 0; i < 3; i++) {
    //make 3 creatures
    Redbug[i] = new Redbug(); 
}

for (var s = 0; s < 3; s++) {
    //make 3 creatures
    sRedbug[s] = new sRedbug(); 
}


draw = function() {
    //the whole program    

    background(179, 252, 250);         
    for (var a = 0; a < 4; a++) {
        for (var b = 0; b < 7; b++) {
            image(getImage("cute/GrassBlock"),a*100,-40+b*61,100,125);
        }
    }
    for (var i = 0; i < Redbug.length; i++) {
        Redbug[i].update();
        Redbug[i].display(); 
   }
     for (var s = 0; s < sRedbug.length; s++) {
        sRedbug[s].update();
        sRedbug[s].display(); 
    }


};
